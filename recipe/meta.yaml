{% set version = "1.0.3" %}

{% set cuda_major = environ.get("cuda_compiler_version", "11.2").split(".")[0]|int %}

package:
  name: tomocupy
  version: {{ version }}

source:
  url: https://github.com/tomography/tomocupy/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 144e5ec1b6a6202139a642d9048e9c77f19a4eb8749afa784ddb3d4a7c5f30c0

build:
  skip: True  # [cuda_compiler_version == "10.2"]
  skip: True  # [cuda_compiler_version in (undefined, "None")]
  skip: True  # [cuda_compiler_version == "12.0"]
  number: 2
  # scikit-build tries to find the latest MSVC compiler instead instead of using
  # cl.exe from the current environment, so on Windows we need to set the full
  # compiler paths in a script.
  script: {{ PYTHON }} -m pip install . -vv  # [not win]
  script_env:
    - CMAKE_GENERATOR=Ninja
  # Minimum supported arch of this package is 60
    - CUDAARCHS=60;72;75
  entry_points:
    - tomocupy = tomocupy.__main__:main
requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake
    - ninja
    - swig
  host:
{% if cuda_major == 12 %}
    - cuda-cudart-dev
    - libcufft-dev
{% endif %}
    - numpy
    - pip
    - python
    - scikit-build
    - setuptools
  run:
    - python
    - cupy
    - h5py
    - numexpr
    - numpy
    - opencv
    - pywavelets
    - tifffile

test:
   requires:
     - pip
   imports:
# Conda-forge bots do not have GPUs for testing
#      - tomocupy
   commands:
     - pip check
# Conda-forge bots do not have GPUs for testing
#      - tomocupy --help

about:
    home: https://github.com/tomography/tomocupy
    license: BSD-3-Clause
    license_family: BSD
    license_file: .licenses/license.c
    summary: 'GPU-based reconstruction of tomography data'

extra:
  recipe-maintainers:
    - nikitinvv
