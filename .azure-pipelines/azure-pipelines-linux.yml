# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      ? linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy1.22python3.8.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy1.22python3.8.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h52f6dd16f8
      ? linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.10.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h3182c7b532
      ? linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.11.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h1c234a632c
      ? linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.12.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h565a78c3e3
      ? linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.9.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilercuda-nvcccuda_compiler_version12.0cxx_compiler_version12numpy2.0python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_hc950a9ca10
      ? linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy1.22python3.8.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy1.22python3.8.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.8
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h1f57c4a6be
      ? linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.10.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.8
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h95ece82ca9
      ? linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.11.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.8
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_h9889147544
      ? linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.12.____cpython
      : CONFIG: linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.8
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_hd950271996
      linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.9.____cpython:
        CONFIG: linux_64_c_stdlib_version2.17cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11numpy2.0python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.8
        SHORT_CONFIG: linux_64_c_stdlib_version2.17cuda_c_hdabac975d1
  timeoutInMinutes: 360
  variables: {}

  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
        export remote_url=$(Build.Repository.Uri)
        export sha=$(Build.SourceVersion)
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
        export CI=azure
        export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        export CONDA_BLD_DIR=build_artifacts
        export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
        # Archive everything in CONDA_BLD_DIR except environments
        export BLD_ARTIFACT_PREFIX=conda_artifacts
        if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
          # Archive the CONDA_BLD_DIR environments only when the job fails
          export ENV_ARTIFACT_PREFIX=conda_envs
        fi
        ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)